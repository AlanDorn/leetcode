/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

 // major points to keep in mind
 
 // figure out how to iterate through these singly-linked list

 // have to add the integers, if the integers exceed 10 add 1 to the next element AND LEAVE a zero!
 
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {

        ListNode temp = new ListNode();
        ListNode temp2 = temp;

        int carry = 0;

        while( (l1 != null)||(l2 != null)|| (carry != 0)  ) {
            int sum = carry;        //make 0 every time, carry is outside to hold carry_val
            carry = 0;

            if (l1 != null){   //check l1, add, then move to next
                sum += l1.val;
                l1 = l1.next;
            }

            if (l2 != null){   //check l1, add, then move to next
                sum += l2.val;
                l2 = l2.next;
            }

            if( sum >=  10){
                carry = 1; 
                sum = sum % 10;               
            }
            
            temp2.next = new ListNode(sum); //making a new node and assigning it to our sum
            
            temp2 = temp2.next;
            
        }
        
        return temp.next;
    }
}